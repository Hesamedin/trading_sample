import com.kamalan.plugin.BumpReadMeVersionPlugin

apply plugin: 'com.android.application'
apply plugin: BumpReadMeVersionPlugin

// =================================================================================================
// This block must not be modified unless BumpVersion.groovy task updates accordingly.
def android_version_code=1
def android_version_name="1.0.2"

def getAppVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : android_version_code
    return code
}

def getAppVersionName = { ->
    def name = project.hasProperty('versionName') ? versionName : android_version_name
    return name
}
//==================================================================================================

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.kamalan.trade"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode getAppVersionCode()
        versionName getAppVersionName()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.each { v ->
                def f = v.outputFile
                def sha = 'git rev-parse --short HEAD'.execute().text.trim()
                def fname = f.name.replace(".apk", "-${defaultConfig.versionName}-${defaultConfig.versionCode}-${sha}.apk")
                v.outputFile = new File(f.parent, fname)
            }
        }
    }

    packagingOptions {
        exclude 'LICENSE.test'
    }

    signingConfigs {
        debug {
            storeFile file("$rootProject.projectDir/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }

        release {
            storeFile file("$rootProject.projectDir/prod.keystore")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'

    testCompile 'junit:junit:4.12'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile ('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
    }
}

bumpReadMeVersion {
    overrideContent = 'app:'
}